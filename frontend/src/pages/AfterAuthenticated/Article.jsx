import axios from 'axios';
import React, { useContext, useEffect, useState } from 'react'
import { UserContext } from '../../contexts/UserContext';
import { SiOpenai } from 'react-icons/si';
import { BiRefresh } from 'react-icons/bi';


const Article = ({ apiPath, int1, int2 }) => {

    const { user } = useContext(UserContext);

    const [wordData, setWordData] = useState([]);

    const [article, setArticle] = useState('');

    const [hideBtn, setHideBtn] = useState(false);

    useEffect(() => {
        if (user) {
            try {
                axios.get(`${apiPath}/word/alltime/${user.user_id}`)
                    .then(response => setWordData(response.data));
            } catch (err) {
                console.error(err.response.data);
            }
        }
    }, [user]);

    function getRandomNumbers() {
        const min = 0;
        const max = wordData.length;
        const count = 9;

        const randomNumbers = [];

        while (randomNumbers.length < count) {
            const randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;

            if (!randomNumbers.includes(randomNumber)) {
                randomNumbers.push(randomNumber);
            }
        }

        return randomNumbers;
    }

    const randomNumbers = wordData.length > 9 ? getRandomNumbers() : null;

    const getWords = () => {
        let words = '';
        if (randomNumbers) {
            wordData.map((item, index) => {
                if (randomNumbers.includes(index)) {
                    words += item.word;
                    words += ' ';
                }
            });
        };
        return words;
    };

    const options = {
        method: 'POST',
        url: process.env.REACT_APP_URL,
        headers: {
            'content-type': 'application/json',
            'X-RapidAPI-Key': process.env.REACT_APP_X_RAPIDAPI_KEY,
            'X-RapidAPI-Host': process.env.REACT_APP_X_RAPIDAPI_HOST,
        },
        data: [
            {
                content: `imagine you are the author and you write amazing articles about ${int1} and ${int2}. As an author can you write me an article about ${int1} or ${int2}. When you write the article please use ${getWords()} words in this article.`,
                role: 'user'
            }
        ]
    };

    const handleGPT = async () => {
        setArticle('');
        setHideBtn(true);
        if (wordData) {
            try {
                const response = await axios.request(options);
                setArticle(response.data.text);
            } catch (error) {
                console.error(error);
            }
        };
    };


    return (
        <div>
            <div className='space-y-6'>
                <div className={`border rounded-lg bg-white shadow-md p-5 space-y-3 ${hideBtn && 'hidden'}`}>
                    <h1 className='text-3xl text-slate-700 font-semibold tracking-tight'>Create Article with AI</h1>
                    <p className='text-lg text-slate-600'>In this section, you can view articles generated by artificial intelligence based on the interests you have specified in your profile. These articles will contain randomly selected words that you have either completed repetitions for or are continuing to learn. This way, by repeating these words in different sentences, you will make your learning more permanent.</p><br />
                </div>
                {wordData.length >= 10 ? (
                    <div className='border rounded-lg bg-white shadow-md p-5 space-y-3'>
                        <div className={`flex justify-center p-6 ${hideBtn && 'hidden'}`}>
                            <button onClick={handleGPT} className='items-center flex space-x-2 text-xl sm:text-2xl md:text-3xl lg:text-4xl font-bold tracking-wider rounded-md bg-gradient-to-r from-green-700 to-green-600 text-white hover:from-green-600 hover:to-green-800 hover:shadow-xl hover:shadow-green-300 transition duration-200 p-6 sm:p-10 md:p-20 border'><SiOpenai /> <span>Generate Article</span></button>
                        </div>

                        <div className={`space-y-2 p-5 ${!hideBtn && 'hidden'}`}>
                            <div className={`flex justify-center flex-wrap text-green-600 pb-6 ${!article && 'hidden'}`}>
                                <button onClick={handleGPT} className='text-6xl hover:text-green-400 transition duration-200'><BiRefresh /></button>
                                <h1 className='text-center w-full text-xl font-semibold'>New Article</h1>
                            </div>
                            <h1 className={`text-slate-500 pb-4 text-xl text-center ${article && 'hidden'}`}>Article will generate, please wait...</h1>
                            <h1 className={`text-slate-500 pb-4 text-center ${!article && 'hidden'}`}>This article includes this words: <span className='font-bold tracking-wider text-black'>' {getWords()}'</span></h1>
                            {article ? article.split('\n').map(
                                (p, index) => (
                                    index === 0 ?
                                        <p key={index} className='text-2xl font-bold text-slate-600 pb-2'>
                                            <span></span>
                                            {p}
                                        </p> : <p key={index} className='text-xl font-large tracking-tight text-slate-500'>
                                            <span>&nbsp;</span>
                                            {p}
                                        </p>
                                )
                            ) : ''}
                        </div>

                    </div>
                ) : (
                    <div className='border rounded-lg bg-white shadow-md p-5 space-y-3 text-center'>
                        <h2 className='text-red-600 text-lg font-semibold'>If you have fewer than 10 words you are currently learning, you cannot use this feature. Please start practicing the words you want to learn with your daily routines.</h2>
                        <h3 className='text-slate-600'>If you want to add new words click <a href="/dashboard/routine/" className='underline text-blue-600'>Here</a>!</h3>
                    </div>
                )}
            </div>
        </div>
    )
}

export default Article